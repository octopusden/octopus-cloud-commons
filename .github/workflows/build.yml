name: Build check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      IS_RELEASE:
        type: boolean
        description: 'Is release'
        default: 'false'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Get the tag version
        id: tag_version
        uses: oprypin/find-latest-tag@v1
        with:
          repository: octopusden/cloud-commons
          prefix: v
      - uses: actions-ecosystem/action-regex-match@v2
        id: version
        name: Prepare a version from a tag
        with:
          text: ${{ steps.tag_version.outputs.tag }}
          regex: '^v([0-9]+)\.?([0-9]+)?\.?([0-9+])?'
          flags: gm
      - run: |
          echo "MAJOR: ${{ steps.version.outputs.group1 }}"
          echo "MINOR: ${{ steps.version.outputs.group2 }}"
          echo "PATCH: ${{ steps.version.outputs.group3 }}"
      - if: ${{ steps.version.outputs.group1 == ''}}
        run: echo "BUILD_VERSION=v2.0.0" >> $GITHUB_ENV
      - if: ${{ steps.version.outputs.group2 == ''}}
        run: echo "BUILD_VERSION=v${{ steps.version.outputs.group1 }}.0.0" >> $GITHUB_ENV
      - if: ${{ steps.version.outputs.group3 == ''}}
        run: echo "BUILD_VERSION=v${{ steps.version.outputs.group1 }}.${{ steps.version.outputs.group2 }}.0" >> $GITHUB_ENV
      - if: ${{ steps.version.outputs.group3 != ''}}
        run: |
          VERSION_PATCH=${{ steps.version.outputs.group3 }}
          echo "BUILD_VERSION=${{ steps.version.outputs.group1 }}.${{ steps.version.outputs.group2 }}.$(($VERSION_PATCH+1))" >> $GITHUB_ENV
      - run: |
          echo "BUILD_VERSION: ${{ env.BUILD_VERSION }}"
      - name: Build
        run: ./gradlew build -P buildVersion=${{ env.BUILD_VERSION }}
      - name: Publish
        if: ${{ inputs.IS_RELEASE }}
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
          BUILD_VERSION: ${{ env.BUILD_VERSION }}
      - name: Create Release
        if: ${{ inputs.IS_RELEASE }}
        uses: marvinpinto/action-automatic-releases@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          automatic_release_tag: v${{ env.BUILD_VERSION }}
